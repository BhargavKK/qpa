<Chapter Label="AR-theory"><Heading>Auslander-Reiten theory</Heading>

This chapter describes the functions implemented for almost split sequences and 
Auslander-Reiten theory in QPA.<P/> 


<Section><Heading>Almost split sequences and AR-quivers</Heading>

<ManSection>
   <Attr Name="AlmostSplitSequence" Arg="M" Comm=""/>
   <Description>
     Arguments: <Arg>M</Arg> - an indecomposable non-projective module.<Br />
   </Description>
   <Returns>the almost split sequence ending in the
   module <Arg>M</Arg> if it is indecomposable and not projective. It
   returns the almost split sequence in terms of two maps, a left
   minimal almost split map and a right minimal almost split map.
   </Returns>
   <Description>
    The range of the right minimal almost split map is not necessarily
    equal to the module <Arg>M</Arg> one started with, but isomorphic. 
    The function assumes that the module <Arg>M</Arg> is indecomposable. 
   </Description>
</ManSection>

<ManSection>
   <Oper Name="PredecessorOfModule" Arg="M, n" Comm=""/>
   <Description>
     Arguments: <Arg>M</Arg> - an indecomposable non-projective module
     and <Arg>n</Arg> - a positive integer.<Br />
   </Description>
   <Returns>the predecessors of the module <Arg>M</Arg> in the
    AR-quiver of the algebra <Arg>M</Arg> is given over of distance
    less or equal to <Arg>n</Arg>. 
   </Returns>
   <Description>
    It returns two lists, the first is the indecomposable modules in
    the different layers and the second is the valuations for the
    arrows in the AR-quiver. The function assumses that the module 
    <Arg>M</Arg> is indecomposable. 
   </Description>
</ManSection>

<Example><![CDATA[
gap> A := KroneckerAlgebra(GF(4),2);  
<GF(2^2)[<quiver with 2 vertices and 2 arrows>]>
gap> S := SimpleModules(A);           
[ <[ 1, 0 ]>, <[ 0, 1 ]> ]
gap> ass := AlmostSplitSequence(S[1]);
[ <<[ 3, 2 ]> ---> <[ 4, 2 ]>>
    , <<[ 4, 2 ]> ---> <[ 1, 0 ]>>
     ]
gap> DecomposeModule(Range(ass[1]));  
[ <[ 2, 1 ]>, <[ 2, 1 ]> ]
gap> PredecessorsOfModule(S[1],5);    
[ [ [ <[ 1, 0 ]> ], [ <[ 2, 1 ]> ], [ <[ 3, 2 ]> ], [ <[ 4, 3 ]> ], [ <[ 5, 4 ]> ], [ <[ 6, 5 ]> ], [  ] ]
    , [ [ [ 1, 1, [ 2, false ] ] ], [ [ 1, 1, [ 2, 2 ] ] ], [ [ 1, 1, [ 2, 2 ] ] ], 
      [ [ 1, 1, [ 2, 2 ] ] ], [ [ 1, 1, [ false, 2 ] ] ] ] ]
]]></Example>
</Section>
</Chapter>