% -*- mode: Noweb; noweb-code-mode: gap-mode -*-%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% HOPF Project Source File
% DESCRIPTION: This file contains specifications, implementation, and tests
%              for group algebras.
%
% Copyright, 1998 Virginia Polytechnic Institute and State University.
% Copyright, 1998 Virginia Tech Hopf Project. All rights reserved.
%
% This file may be distributed in accordance with the stipulations existing
% in the LICENSE file accompanying this software.
%
% $Id: alggrp.nw,v 1.1 2010/05/07 13:30:13 sunnyquiver Exp $
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
@

\chapter{Group Algebra Domain}

\section{Overview}\label{section:GroupAlgebraOverview}
Group algebras\index{group algebra} are common encodings for algebras
used in \hopf. Suppose we have a group $G$ and a field $F$. The group
algebra $FG$ is the set of linear combinations of group elements from
$G$ with coefficients from $F$. Addition is a formal operation in
$FG$, which multiplication is defined by the multiplication in $G$
distributed over addition in the natural way.

Fortunately, GAP4 supports the elementwise operations by defining
\textit{magma rings}. See the files \texttt{mgmring.gd} and
\texttt{mgmring.gi} for details on magma rings. We build on top of
magma rings to provide the additional functionality and specialized
versions of some algebraic computations not provided in GAP4.

\section{Source Files}

<<[[alggrp.gd]]>>=
# GAP Declarations
# This file was generated from
# $Id: alggrp.nw,v 1.1 2010/05/07 13:30:13 sunnyquiver Exp $
<<Declarations for Group Algebra Attributes>>
<<Declarations for Group Algebra Functions>>

<<[[alggrp.gi]]>>=
# GAP Implementation
# This file was generated from
# $Id: alggrp.nw,v 1.1 2010/05/07 13:30:13 sunnyquiver Exp $
<<Implementation for Group Algebra Functions>>
@   

\section{Group Algebra}\label{section:GroupAlgebra}

\subsection{Categories}\label{subsection:GroupAlgebraCategories}

\paragraph{Property Synonym} The [[IsGroupAlgebra]] category contains all
group algebra instantiations. However, instead of implementing the
category using [[DeclareCategory]], we use a property instead to
remain consistent with the way group rings are declared in GAP4. See
\texttt{mgmring.gd} and \texttt{mgmring.gi} for details on group
rings. A group algebra is considered to be a group ring and an
algebra.

\begin{verbatim}
IsGroupAlgebra(A)
\end{verbatim}

<<Declarations for Group Algebra Attributes>>=
DeclareSynonym( "IsGroupAlgebra", IsGroupRing and IsAlgebra);
@

\subsection{Creation of Group Algebras}\label{subsection:GroupAlgebraCreation}

\paragraph{Global Function} Although group algebras can be created with the 
[[FreeMagmaRing]] function, we create an additional global function to
create group algebras for convienence. [[GroupAlgebra]] takes a field
$F$ and a group $G$ and returns the group algebra $FG$.

<<Declarations for Group Algebra Functions>>=
DeclareGlobalFunction( "GroupAlgebra" );
@

<<Implementation for Group Algebra Functions>>=
InstallGlobalFunction( GroupAlgebra, function( arg )
    if Length( arg ) = 2 and IsField( arg[1] ) and IsGroup( arg[2] ) then
        return GroupRing( arg[1], arg[2] );
    else
        Error("usage: GroupAlgebra( <F>, <G> )");
    fi;
end );
@

\subsection{Subalgebras of Group Algebras}\label{subsection:GroupAlgebraSubalgebras}

The [[Centre]] function is implemented for group rings and applies
directly to group algebras, so no new implementation is needed.

\paragraph{Keyed Attribute} The [[PowerSubalgebra]] attribute
returns a power subalgebra\index{power subalgebra} of an
algebra $A$ defined over a finite field $F$. Let $q = p^m$, and $F =
F_q$. Then for each divisor $d$ of $m$, the subalgebra consisting of
the elements such that $a^r = a$ where $r = p^d$ is a power
subalgebra. Normally the power subalgebra is calculated using
linear algebra, but group algebras give rise to a potentially more
efficient way of computing the power subalgebra. Let $G$ be the
group used to define the group algebra.  The following definition and
proposition appears in Davis~\cite{Davis}.

\begin{definition}
  An orbit of elements of elements of $G$ under the action of the permutation
  group generated by the $r^{th}$-power map $g \to g^r$ and all inner
  automorphism is called an r-cyclotomic conjugacy class.
\end{definition}

\begin{proposition}
  Suppose that $G$ is a finite group whose order is not divisible by
  the prime $p$. Let $A$ denote the center of the group algebra $FG$,
  where $F = F_q$. Then the set of $q$-cyclotomic conjugacy class sums
  is a $F$-basis for the power subalgebra with respect to the
  exponent $q$.
\end{proposition}

The [[PowerSubalgebra]] attribute is defined in
chapter~\ref{chapter:Algebras}. The specialized implementation for
group algebras is given here.

<<Implementation for Group Algebra Functions>>=
InstallMethod( PowerSubalgebraOp,
    "for group algebras",
    true,
    [IsGroupAlgebra, IsPosInt], 0,
    function( A, n )
        local F, p, m, powerMap, G, gens, permGroup, autoGroup, orbits, fam,
              one, zero, basis, q;

        F := LeftActingDomain(A);
        p := Characteristic(F);
        m := DegreeOverPrimeField(F);
        G := GroupOfGroupAlgebra(A);

        if (m mod n) <> 0 then
            Error("<d> must be a factor of field degree");
        fi;

        if (Size(G) mod p) = 0 then
            TryNextMethod();
        fi;

        q := p^n;
        powerMap := GroupHomomorphismByFunction(G, G, x -> x^q, x -> x^(-q));
	autoGroup := InnerAutomorphismsAutomorphismGroup(AutomorphismGroup(G));
        if IsList(autoGroup) then
            gens := Concatenation(autoGroup, [powerMap]);
        else
	    gens := Concatenation(GeneratorsOfGroup(autoGroup), [powerMap]);
        fi;
	permGroup := Group(gens);
	orbits := Orbits(permGroup, G);

	fam := ElementsFamily(FamilyObj(A));
	one := One(F);
	zero := Zero(F);

	basis := List( orbits, x -> ElementOfMagmaRing( fam, zero, 
			List(x, x -> one), x) );
	return SubalgebraNC( A, basis, "basis" );
	
    end );
@

\subsection{Attributes of Group Algebras}

\paragraph{Attribute} The [[GroupOfGroupAlgebra]] returns the group used
to define the group algebra.

\begin{verbatim}
GroupOfGroupAlgebra(A)
\end{verbatim}

<<Declarations for Group Algebra Attributes>>=
DeclareAttribute("GroupOfGroupAlgebra", IsGroupAlgebra );

<<Implementation for Group Algebra Functions>>=
InstallMethod( GroupOfGroupAlgebra,
    "for group algebras",
    true,
    [ IsGroupAlgebra ], 0,
    UnderlyingMagma
);
@
