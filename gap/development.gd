DeclareOperation( "IsSelfinjective", [IsSubalgebraFpPathAlgebra ] ); 
DeclareOperation( "LoewyLength", [IsPathAlgebraMatModule ] ); 
DeclareOperation( "CoxeterPolynomial", [IsPathAlgebra ] ); 
DeclareOperation( "CoxeterMatrix", [IsPathAlgebra ] ); 
DeclareOperation( "RadicalSeries", [IsPathAlgebraMatModule ] ); 
DeclareOperation( "SocleSeries", [IsPathAlgebraMatModule ] ); 
DeclareOperation( "DimensionMatModule", [IsPathAlgebraMatModule ] ); 
DeclareOperation( "IsProjectiveModule", [IsPathAlgebraMatModule ] ); 
DeclareOperation( "IsInjectiveModule", [IsPathAlgebraMatModule ] ); 
DeclareOperation( "IsSimpleModule", [IsPathAlgebraMatModule ] ); 
DeclareOperation( "IsSemisimpleModule", [IsPathAlgebraMatModule ] );
DeclareOperation( "1st_Syzygy", [IsPathAlgebraMatModule ] );
DeclareOperation( "nth_Syzygy", [IsPathAlgebraMatModule, IS_INT ] );
DeclareOperation( "nth_SyzygyNC", [IsPathAlgebraMatModule, IS_INT ] );
DeclareOperation( "TipMonomialandCoefficientOfVector", [ IsAlgebra, IsCollection ] );
DeclareOperation( "TipReduceVectors", [ IsAlgebra, IsCollection ] );
DeclareOperation( "CoefficientsOfVectors", [ IsAlgebra, IsCollection, IsList ] );
DeclareOperation( "DirectSumOfPathAlgebraMatModules", [IsList] );
DeclareAttribute( "IsDirectSum", IsPathAlgebraMatModule );
DeclareAttribute( "DirectSumProjections", IsPathAlgebraMatModule );
DeclareAttribute( "DirectSumInclusions", IsPathAlgebraMatModule );
DeclareOperation( "PushOut", [ IsPathAlgebraMatModuleMap, IsPathAlgebraMatModuleMap ] );
DeclareOperation( "PullBack", [ IsPathAlgebraMatModuleMap, IsPathAlgebraMatModuleMap ] );
DeclareOperation( "IsOmegaPeriodic", [IsPathAlgebraMatModule, IS_INT ] );
DeclareOperation( "FromHomMMToEndM", [ IsPathAlgebraMatModuleMap ] );
DeclareOperation( "FromEndMToHomMM", [ IsPathAlgebraMatModule, IsMatrix ] );
DeclareAttribute( "IsRightMinimal", IsPathAlgebraMatModuleMap );
DeclareAttribute( "IsLeftMinimal", IsPathAlgebraMatModuleMap );
DeclareAttribute( "IsSplitMono", IsPathAlgebraMatModuleMap );
DeclareAttribute( "IsSplitEpi", IsPathAlgebraMatModuleMap );
DeclareOperation( "MoreRightMinimalVersion", [ IsPathAlgebraMatModuleMap ]);
DeclareOperation( "MoreLeftMinimalVersion", [ IsPathAlgebraMatModuleMap ]);
DeclareOperation( "RightMinimalVersion", [ IsPathAlgebraMatModuleMap ]);
DeclareOperation( "LeftMinimalVersion", [ IsPathAlgebraMatModuleMap ]);
DeclareOperation( "MinimalRightApproximation", [ IsPathAlgebraMatModule, IsPathAlgebraMatModule ]);
DeclareOperation( "MinimalLeftApproximation", [ IsPathAlgebraMatModule, IsPathAlgebraMatModule ]);
DeclareOperation( "SupportModuleElement", [ IsRightAlgebraModuleElement ] );
DeclareOperation( "BasisOfProjectives", [IsSubalgebraFpPathAlgebra ] ); 
DeclareOperation( "VertexPosition", [ IsElementOfFpPathAlgebra ] );
DeclareOperation( "HomFromProjective", [ IsRightAlgebraModuleElement, IsPathAlgebraMatModule ] );
DeclareOperation( "ProjectiveCover", [ IsPathAlgebraMatModule ] );
DeclareOperation( "ExtOne", [ IsPathAlgebraMatModule, IsPathAlgebraMatModule ]);
DeclareOperation( "AlmostSplitSequence", [ IsPathAlgebraMatModule ]);
