DeclareOperation( "IsSelfinjectiveAlgebra", [IsQuotientOfPathAlgebra ] ); 
DeclareOperation( "LoewyLength", [IsPathAlgebraMatModule ] ); 
DeclareOperation( "CoxeterPolynomial", [IsPathAlgebra ] ); 
DeclareOperation( "CoxeterMatrix", [IsPathAlgebra ] ); 
DeclareOperation( "RadicalSeries", [IsPathAlgebraMatModule ] ); 
DeclareOperation( "SocleSeries", [IsPathAlgebraMatModule ] ); 
#DeclareOperation( "Dimension", [IsPathAlgebraMatModule ] ); 
DeclareOperation( "IsProjectiveModule", [IsPathAlgebraMatModule ] ); 
DeclareOperation( "IsInjectiveModule", [IsPathAlgebraMatModule ] ); 
DeclareOperation( "IsSimpleModule", [IsPathAlgebraMatModule ] ); 
DeclareOperation( "IsSemisimpleModule", [IsPathAlgebraMatModule ] );
DeclareOperation( "1stSyzygy", [IsPathAlgebraMatModule ] );
DeclareOperation( "NthSyzygy", [IsPathAlgebraMatModule, IS_INT ] );
DeclareOperation( "NthSyzygyNC", [IsPathAlgebraMatModule, IS_INT ] );
DeclareOperation( "TipMonomialandCoefficientOfVector", [ IsAlgebra, IsCollection ] );
DeclareOperation( "TipReduceVectors", [ IsAlgebra, IsCollection ] );
DeclareOperation( "CoefficientsOfVectors", [ IsAlgebra, IsCollection, IsList ] );
DeclareOperation( "DirectSumOfModules", [IsList] );
DeclareAttribute( "IsDirectSumOfModules", IsPathAlgebraMatModule );
DeclareAttribute( "DirectSumProjections", IsPathAlgebraMatModule );
DeclareAttribute( "DirectSumInclusions", IsPathAlgebraMatModule );
DeclareOperation( "PushOut", [ IsPathAlgebraMatModuleHomomorphism, IsPathAlgebraMatModuleHomomorphism ] );
DeclareOperation( "PullBack", [ IsPathAlgebraMatModuleHomomorphism, IsPathAlgebraMatModuleHomomorphism ] );
DeclareOperation( "IsOmegaPeriodic", [IsPathAlgebraMatModule, IS_INT ] );
DeclareOperation( "FromHomMMToEndM", [ IsPathAlgebraMatModuleHomomorphism ] );
DeclareOperation( "FromEndMToHomMM", [ IsPathAlgebraMatModule, IsMatrix ] );
DeclareAttribute( "IsRightMinimal", IsPathAlgebraMatModuleHomomorphism );
DeclareAttribute( "IsLeftMinimal", IsPathAlgebraMatModuleHomomorphism );
DeclareAttribute( "IsSplitMonomorphism", IsPathAlgebraMatModuleHomomorphism );
DeclareAttribute( "IsSplitEpimorphism", IsPathAlgebraMatModuleHomomorphism );
DeclareOperation( "MoreRightMinimalVersion", [ IsPathAlgebraMatModuleHomomorphism ]);
DeclareOperation( "MoreLeftMinimalVersion", [ IsPathAlgebraMatModuleHomomorphism ]);
DeclareOperation( "RightMinimalVersion", [ IsPathAlgebraMatModuleHomomorphism ]);
DeclareOperation( "LeftMinimalVersion", [ IsPathAlgebraMatModuleHomomorphism ]);
DeclareOperation( "MinimalRightApproximation", [ IsPathAlgebraMatModule, IsPathAlgebraMatModule ]);
DeclareOperation( "MinimalLeftApproximation", [ IsPathAlgebraMatModule, IsPathAlgebraMatModule ]);
DeclareOperation( "SupportModuleElement", [ IsRightAlgebraModuleElement ] );
DeclareAttribute( "BasisOfProjectives", IsQuotientOfPathAlgebra ); 
DeclareOperation( "VertexPosition", [ IsElementOfQuotientOfPathAlgebra ] );
DeclareOperation( "HomFromProjective", [ IsRightAlgebraModuleElement, IsPathAlgebraMatModule ] );
DeclareAttribute( "ProjectiveCover", IsPathAlgebraMatModule );
DeclareOperation( "ExtOverAlgebra", [ IsPathAlgebraMatModule, IsPathAlgebraMatModule ]);
DeclareOperation( "AlmostSplitSequence", [ IsPathAlgebraMatModule ]);
DeclareOperation( "ExtOverAlgebraAdd", [ IsPathAlgebraMatModule, IsPathAlgebraMatModule ]);
DeclareProperty( "IsSymmetricAlgebra", IsAlgebra );
DeclareProperty( "IsWeaklySymmetricAlgebra", IsAlgebra );