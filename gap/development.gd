DeclareOperation( "IsSelfinjectiveAlgebra", [IsQuotientOfPathAlgebra ] ); 
DeclareOperation( "LoewyLength", [IsPathAlgebraModule ] ); 
DeclareOperation( "CoxeterPolynomial", [IsPathAlgebra ] ); 
DeclareOperation( "CoxeterMatrix", [IsPathAlgebra ] ); 
DeclareOperation( "RadicalSeries", [IsPathAlgebraModule ] ); 
DeclareOperation( "SocleSeries", [IsPathAlgebraModule ] ); 
#DeclareOperation( "Dimension", [IsPathAlgebraModule ] ); 
DeclareOperation( "IsProjectiveModule", [IsPathAlgebraModule ] ); 
DeclareOperation( "IsInjectiveModule", [IsPathAlgebraModule ] ); 
DeclareOperation( "IsSimpleModule", [IsPathAlgebraModule ] ); 
DeclareOperation( "IsSemisimpleModule", [IsPathAlgebraModule ] );
DeclareOperation( "1stSyzygy", [IsPathAlgebraModule ] );
DeclareOperation( "NthSyzygy", [IsPathAlgebraModule, IS_INT ] );
DeclareOperation( "NthSyzygyNC", [IsPathAlgebraModule, IS_INT ] );
DeclareOperation( "TipMonomialandCoefficientOfVector", [ IsAlgebra, IsCollection ] );
DeclareOperation( "TipReduceVectors", [ IsAlgebra, IsCollection ] );
DeclareOperation( "CoefficientsOfVectors", [ IsAlgebra, IsCollection, IsList ] );
DeclareOperation( "DirectSumOfModules", [IsList] );
DeclareAttribute( "IsDirectSumOfModules", IsPathAlgebraModule );
DeclareAttribute( "DirectSumProjections", IsPathAlgebraModule );
DeclareAttribute( "DirectSumInclusions", IsPathAlgebraModule );
DeclareOperation( "PushOut", [ IsPathAlgebraModuleHomomorphism, IsPathAlgebraModuleHomomorphism ] );
DeclareOperation( "PullBack", [ IsPathAlgebraModuleHomomorphism, IsPathAlgebraModuleHomomorphism ] );
DeclareOperation( "IsOmegaPeriodic", [IsPathAlgebraModule, IS_INT ] );
DeclareOperation( "FromHomMMToEndM", [ IsPathAlgebraModuleHomomorphism ] );
DeclareOperation( "FromEndMToHomMM", [ IsPathAlgebraModule, IsMatrix ] );
DeclareAttribute( "IsRightMinimal", IsPathAlgebraModuleHomomorphism );
DeclareAttribute( "IsLeftMinimal", IsPathAlgebraModuleHomomorphism );
DeclareAttribute( "IsSplitMonomorphism", IsPathAlgebraModuleHomomorphism );
DeclareAttribute( "IsSplitEpimorphism", IsPathAlgebraModuleHomomorphism );
DeclareOperation( "MoreRightMinimalVersion", [ IsPathAlgebraModuleHomomorphism ]);
DeclareOperation( "MoreLeftMinimalVersion", [ IsPathAlgebraModuleHomomorphism ]);
DeclareOperation( "RightMinimalVersion", [ IsPathAlgebraModuleHomomorphism ]);
DeclareOperation( "LeftMinimalVersion", [ IsPathAlgebraModuleHomomorphism ]);
DeclareOperation( "MinimalRightApproximation", [ IsPathAlgebraModule, IsPathAlgebraModule ]);
DeclareOperation( "MinimalLeftApproximation", [ IsPathAlgebraModule, IsPathAlgebraModule ]);
DeclareOperation( "SupportModuleElement", [ IsRightAlgebraModuleElement ] );
DeclareAttribute( "BasisOfProjectives", IsQuotientOfPathAlgebra ); 
DeclareOperation( "VertexPosition", [ IsElementOfQuotientOfPathAlgebra ] );
DeclareOperation( "HomFromProjective", [ IsRightAlgebraModuleElement, IsPathAlgebraModule ] );
DeclareAttribute( "ProjectiveCover", IsPathAlgebraModule );
DeclareOperation( "ExtOverAlgebra", [ IsPathAlgebraModule, IsPathAlgebraModule ]);
DeclareOperation( "AlmostSplitSequence", [ IsPathAlgebraModule ]);
DeclareOperation( "ExtOverAlgebraAdd", [ IsPathAlgebraModule, IsPathAlgebraModule ]);
