DeclareProperty( "IsSelfinjectiveAlgebra",  IsAlgebra ); 
DeclareAttribute( "LoewyLength", IsPathAlgebraMatModule  ); 
DeclareAttribute( "CoxeterPolynomial",  IsPathAlgebra  ); 
DeclareAttribute( "CoxeterMatrix", IsPathAlgebra ); 
DeclareAttribute( "RadicalSeries",  IsPathAlgebraMatModule ); 
DeclareAttribute( "SocleSeries", IsPathAlgebraMatModule ); 
#DeclareOperation( "Dimension", [ IsPathAlgebraMatModule ] ); 
DeclareProperty( "IsProjectiveModule",  IsPathAlgebraMatModule ); 
DeclareProperty( "IsInjectiveModule", IsPathAlgebraMatModule ); 
DeclareProperty( "IsSimpleModule", IsPathAlgebraMatModule ); 
DeclareProperty( "IsSemisimpleModule", IsPathAlgebraMatModule );
DeclareAttribute( "1stSyzygy", IsPathAlgebraMatModule );
DeclareOperation( "NthSyzygy", [ IsPathAlgebraMatModule, IS_INT ] );
DeclareOperation( "NthSyzygyNC", [ IsPathAlgebraMatModule, IS_INT ] );
DeclareOperation( "TipMonomialandCoefficientOfVector", [ IsAlgebra, IsCollection ] );
DeclareOperation( "TipReduceVectors", [ IsAlgebra, IsCollection ] );
DeclareOperation( "CoefficientsOfVectors", [ IsAlgebra, IsCollection, IsList ] );
DeclareOperation( "DirectSumOfModules", [ IsList] );
DeclareAttribute( "IsDirectSumOfModules", IsPathAlgebraMatModule );
DeclareAttribute( "DirectSumProjections", IsPathAlgebraMatModule );
DeclareAttribute( "DirectSumInclusions", IsPathAlgebraMatModule );
DeclareOperation( "PushOut", [ IsPathAlgebraMatModuleHomomorphism, IsPathAlgebraMatModuleHomomorphism ] );
DeclareOperation( "PullBack", [ IsPathAlgebraMatModuleHomomorphism, IsPathAlgebraMatModuleHomomorphism ] );
DeclareOperation( "IsOmegaPeriodic", [IsPathAlgebraMatModule, IS_INT ] );
DeclareOperation( "FromHomMMToEndM", [ IsPathAlgebraMatModuleHomomorphism ] );
DeclareOperation( "FromEndMToHomMM", [ IsPathAlgebraMatModule, IsMatrix ] );
DeclareProperty( "IsRightMinimal", IsPathAlgebraMatModuleHomomorphism );
DeclareProperty( "IsLeftMinimal", IsPathAlgebraMatModuleHomomorphism );
DeclareAttribute( "IsSplitMonomorphism", IsPathAlgebraMatModuleHomomorphism );
DeclareAttribute( "IsSplitEpimorphism", IsPathAlgebraMatModuleHomomorphism );
DeclareOperation( "MoreRightMinimalVersion", [ IsPathAlgebraMatModuleHomomorphism ]);
DeclareOperation( "MoreLeftMinimalVersion", [ IsPathAlgebraMatModuleHomomorphism ]);
DeclareAttribute( "RightMinimalVersion", IsPathAlgebraMatModuleHomomorphism );
DeclareAttribute( "LeftMinimalVersion", IsPathAlgebraMatModuleHomomorphism );
DeclareOperation( "MinimalRightApproximation", [ IsPathAlgebraMatModule, IsPathAlgebraMatModule ]);
DeclareOperation( "MinimalLeftApproximation", [ IsPathAlgebraMatModule, IsPathAlgebraMatModule ]);
DeclareOperation( "SupportModuleElement", [ IsRightAlgebraModuleElement ] );
DeclareAttribute( "BasisOfProjectives", IsQuotientOfPathAlgebra ); 
DeclareOperation( "VertexPosition", [ IsElementOfQuotientOfPathAlgebra ] );
DeclareOperation( "HomFromProjective", [ IsRightAlgebraModuleElement, IsPathAlgebraMatModule ] );
DeclareAttribute( "ProjectiveCover", IsPathAlgebraMatModule );
DeclareOperation( "ExtOverAlgebra", [ IsPathAlgebraMatModule, IsPathAlgebraMatModule ]);
DeclareAttribute( "AlmostSplitSequence", IsPathAlgebraMatModule );
DeclareOperation( "ExtOverAlgebraAdd", [ IsPathAlgebraMatModule, IsPathAlgebraMatModule ]);
DeclareProperty( "IsSymmetricAlgebra", IsAlgebra );
DeclareProperty( "IsWeaklySymmetricAlgebra", IsAlgebra );
DeclareOperation( "ExtAlgebraGenerators", [ IsPathAlgebraMatModule, IS_INT ] );